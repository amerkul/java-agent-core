plugins {
    id "java-library"
    id "maven-publish"
}

group = 'com.zebrunner'
version = "${version != 'unspecified' ? version : '1.7.0'}"

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation('com.konghq:unirest-java:3.13.10')
    implementation('org.yaml:snakeyaml:1.30')

    implementation 'com.squareup.okhttp3:logging-interceptor:4.10.0'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.fatboyindustrial.gson-javatime-serialisers:gson-javatime-serialisers:1.1.2'
    implementation 'com.squareup.retrofit2:converter-scalars:2.9.0'

    implementation("net.bytebuddy:byte-buddy:1.12.10")
    compileOnly('io.appium:java-client:8.2.0')

    implementation('org.slf4j:slf4j-api:1.7.36')
    compileOnly("log4j:log4j:1.2.17")
    compileOnly('org.apache.logging.log4j:log4j-core:2.17.2')
    compileOnly('ch.qos.logback:logback-classic:1.2.11')

    annotationProcessor('org.projectlombok:lombok:1.18.24')
    compileOnly("org.projectlombok:lombok:1.18.24")

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

jar {
    manifest {
        attributes(
                "Premain-Class": "com.zebrunner.agent.core.webdriver.DriverSessionsAgent",
                "Can-Redefine-Classes": false,
                "Can-Retransform-Classes": true,
                "Build-Jdk": "1.8.0_152"
        )
    }
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'agent-core'
            version = '1.7.1-SNAPSHOT'
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
        }
    }
    repositories {
        maven {
            // change URLs to point to your repos, e.g. http://my.org/repo
            def releasesRepoUrl = layout.buildDirectory.dir('repos/releases')
            def snapshotsRepoUrl = layout.buildDirectory.dir('repos/snapshots')
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}

//signing {
//    sign publishing.publications.mavenJava
//}


javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

//apply from: 'publish-maven.gradle'
